{"version":3,"sources":["images/IMG_0049.jpg","images/lakelucerne.jpeg","Fragments/Header.js","Fragments/About.js","Fragments/Links.js","Fragments/Home.js","Fragments/Research.js","Pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","Header","props","classes","sections","title","Toolbar","className","Typography","component","variant","color","align","noWrap","map","section","Link","key","href","url","About","style","alignItems","Grid","container","item","xs","src","corbanpic","alt","maxWidth","maxHeight","borderRadius","list","listStyleType","listItem","hover","fontSize","Links","target","rel","Home","Research","root","flexGrow","paper","textAlign","text","secondary","Main","Container","xl","lakelucerne","Paper","path","App","Helmet","integrity","crossorigin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f03ed4ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_0049.2709696a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lakelucerne.15df478a.jpeg\";","import React, { Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const { sections, title } = props;\n\n  return (\n    <Fragment>\n      <Toolbar className={classes.toolbar}>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          {title}\n        </Typography>\n      </Toolbar>\n      \n      <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n        {sections.map((section) => (\n          <Link\n            color=\"inherit\"\n            noWrap\n            key={section.title}\n            variant=\"body2\"\n            href={section.url}\n            className={classes.toolbarLink}\n          >\n            {section.title}\n          </Link>\n        ))}\n      </Toolbar>\n    </Fragment>\n  )\n}\n\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string,\n};","import React from 'react';\nimport corbanpic from '../images/IMG_0049.jpg';\nimport Grid from '@material-ui/core/Grid';\n\nconst About = props => {\n  return (\n    <>\n        <title>\n            <h2>Welcome to my page!  It is currently a work in progress.</h2>\n        </title>\n        <body>\n            <h3 style={{alignItems: 'center'}}>\n                About Me\n            </h3>\n            <Grid container spacing={2}>\n                <Grid item xs={9}>\n                    <p>\n                        In August 2020, I graduate from the Capital One Developer Academy (CODA) program offered by Capital One.  Since this program teaches me to be a full-stack web developer, this website serves the purpose of providing me with practice in that field.  The other purpose of this site is to document information about myself, wherein others may derive various uses, hopefully beneficial.\n                    </p>\n                </Grid>\n                <Grid item xs={3}>\n                </Grid>\n                <Grid item xs={12}>\n                    <img src={corbanpic} alt=\"Corban Joyce\" style={{maxWidth: '100%', maxHeight: '100%', borderRadius: '8px'}}/>\n                </Grid>\n            </Grid>\n        </body>\n    \n\n    </>\n  )\n}\n\nexport default About;","import React, { Fragment } from 'react';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        listStyleType: 'none',\n    },\n    listItem: {\n        padding: '5%',\n        hover: 'auto',\n        fontSize: '1rem'\n    }\n  }));\n\nconst Links = props => {\n    const classes = useStyles();\n\n    return (\n        <Fragment>\n            <header>\n                <h2>External Links</h2>\n            </header>\n            <body>\n                <ul className={classes.list}>\n                    <li className={classes.listItem}>\n                        <a href=\"mailto:corbantjoyce@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <MailOutlineIcon />\n                            Email\n                        </a>\n                    </li>\n                    <li className={classes.listItem}>\n                        <a href=\"https://www.linkedin.com/in/corban-joyce/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <LinkedInIcon />\n                            LinkedIn\n                        </a>\n                    </li>\n                    <li className={classes.listItem}>\n                        <a href=\"https://github.com/corbantjoyce\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <GitHubIcon />\n                            Github\n                        </a>\n                        \n                    </li>\n                </ul>\n            </body>\n        \n\n        </Fragment>\n    )\n}\n\nexport default Links;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst Home = props => {\n  return (\n    <>\n        <body>\n            <h3 style={{alignItems: 'center'}}>\n                Home\n            </h3>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <p>\n                        Welcome to my page!  It is currently a work in progress.\n                        Navigate to other parts of the site by clicking on one of the tabs above. \n                    </p>\n                </Grid>\n            </Grid>\n        </body>\n    \n\n    </>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst Research = props => {\n  return (\n    <>\n        <title>\n            <h2>Welcome to my page!  It is currently a work in progress.</h2>\n        </title>\n        <body>\n            <h3 style={{alignItems: 'center'}}>\n                Research\n            </h3>\n            <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                    <h3 style={{alignItems: 'center'}}>\n                        Other Stuff\n                    </h3>\n                        <p>\n                            I'm not sure what to put here.\n                        </p>\n                    </Grid>\n                </Grid>\n        </body>\n    \n\n    </>\n  )\n}\n\nexport default Research;","import React from 'react';\nimport Header from '../Fragments/Header';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import Journal from '../Fragments/Journal';\nimport About from '../Fragments/About';\nimport Links from '../Fragments/Links';\nimport Home from '../Fragments/Home';\nimport Research from '../Fragments/Research';\n// import CenterColumn from '../Fragments/CenterColumn';\n\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n// import snow from '../images/snow.jpeg';\nimport lakelucerne from '../images/lakelucerne.jpeg';\n\n\n\nconst sections = [\n    { title: 'Home', url: '/' },\n    { title: 'About', url: 'about' },\n    { title: 'Music', url: 'music' },\n    { title: 'Videos', url: 'videos' },\n    { title: 'Research', url: 'research' },\n    // { title: 'Travel', url: 'travel' },\n    // { title: 'Health', url: 'health' },\n    // { title: 'Philanthropy', url: 'philanthropy' },\n    // { title: 'Personal Projects', url: 'personal' },\n    // { title: 'Business', url: 'business' },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nfunction Main() {    \n    const classes = useStyles();\n    \n    return (\n        <>\n            <Container maxWidth=\"xl\">\n                <Grid container spacing={2}>\n                    <Grid item xl={12}>\n                        <img src={lakelucerne} alt=\"Field in Lake Lucerne\" style={{maxWidth: '100%', maxHeight: '100%', borderRadius: '4px'}}/>\n                    </Grid>\n                </Grid>\n                <Router>\n                    <Header title=\"CORBAN\" sections={sections} />\n                <Grid container spacing={3} className={classes.root}>\n                    <Grid item xs={2}>\n                        <Paper className={classes.paper}>\n                            <Links />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Paper className={classes.paper}>\n                            <Routes>\n                                <Route path='/' component={<Home />}/>\n                                <Route path='/about' component={<About />}/>\n                                <Route path='/research' component={<Research />}/>\n                            </Routes>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                </Router>\n            </Container>\n        </>\n    )\n}\n\nexport default Main;","import React from 'react';\n// import hexsky from './IMG_6471.jpeg';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport Main from './Pages/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Helmet>\n          <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\" />\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n          <title>Corban Joyce</title>\n        </Helmet>\n        <Main />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}